//Java note

01  -  //Java work flow

	source code(Hello.java) -> java complier(javac) -> java bytecode (Hello.class) -> work in jvm

	//Java Environment
	
	Java Runtime Environment (JRE) = Java Virtual Machine (JVM) + Java API

	Java Development Kid (JDK) = JRE + Java Compiler + Java Tools

		 //Java Editions

	-Java SE (Java Standard Edition)
		Basic edition of java , for desktop app

	-Java EE (Java Enterprise Edition)
		Enterprise Java Application , similar like Web app

	-Java ME (Java Micro Edition)
		For Embedded environment , for factory , car 

	 //language basic

	-basic structure of a class

	-java data types

	-identifiers & modifiers

	-statements

		//OOP

		//Essential API
			-exceptions
			-number
			-strings
			-date & calendar
			-collections
			-java io
			-nio 2
			-threads
			-concurrency

		//class declaration

02	-	java program start run main-method ,
		single line comment - //

03	-	//class and object
		-In Java, an object is created from a class.
		-object contain state(data , attribute) and behaviour(method)
		-can use [new] - key word to create object

04	-	//variable
			variable -> [ Global variable (static variable or instant / object variable) ] or [ Local variable]

			- static variable is specifically associated with the class, shared among all instances.
			- static variables are stored in a single shared memory location

			- instance variable / object variable is specifically tied to the object created
			- instance variables are stored in separate memory locations for each object
	
		//variable scope

		//instance variable / object variable can only be accessed through an object		
		

05	-	//method

		public static void main (String [] args) {}

		public - access modifier (default - private)
		static - non access modifier (default - instance method / object method)
		void - return type (necessary , other - int , String ...)
		main - method name (necessary)
		String - arguments 
		args - method body
		{} - method scope / method range

		If there is no need to receive arguments, write () instead of (String[] args).


		//arguments / parameter
		
		public class WritingMethod{

			public static void main(String[] args) {
				showAddResult(4, 5); //parameter 4 , 5 to send
			}

			static void showAddResult(int a , int b){ //arguments a and b for receive
				int x = a + b;
				System.out.println("Add result : " + x);
			}
		}